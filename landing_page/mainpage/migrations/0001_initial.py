# Generated by Django 2.0.5 on 2018-06-07 20:30

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Courators',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('curator_name', models.CharField(help_text='Сначало имя, потом фамилия', max_length=50, verbose_name='Имя и фамилия куратора')),
                ('curator_bio', models.TextField(help_text='Где и кем работает, что программирует', verbose_name='Биография куратора')),
                ('curator_motto', models.CharField(help_text='Через тернии к звездам или что-нибудь такое', max_length=150, verbose_name='Девиз куратора')),
                ('curator_photo', models.ImageField(help_text='Фотография куратора', upload_to='', verbose_name='Фото куратора')),
                ('courator_status', models.BooleanField(default=True, help_text='Куратор работает в текущем наборе?', verbose_name='Куратор для ближайшего набора?')),
                ('courator_github', models.URLField(blank=True, help_text='Ссылка на гит-хаб куратора', verbose_name='GitHub куратора')),
                ('courator_social_network', models.URLField(blank=True, help_text='Если есть, ссылка на соцсеточку', verbose_name='Соцсеточка куратора')),
            ],
            options={
                'verbose_name_plural': 'LearnPython Кураторы',
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_author', models.CharField(help_text='Кто автор отзыва?', max_length=50, null=True, verbose_name='Автор отзыва')),
                ('feedback_author_link', models.URLField(blank=True, help_text='Есть ли ссылка на соцсеточки автора?', null=True, verbose_name='Ссылка на автора')),
                ('feedback_author_position', models.CharField(help_text='Кем работает автор?', max_length=50, null=True, verbose_name='Должность выпускника')),
                ('feedback_author_photo', models.ImageField(help_text='Прикрепите фото автора отзыва', null=True, upload_to='', verbose_name='Фотография автора')),
                ('feedback_text', models.TextField(help_text='А сюда пишем отзыв автора', null=True, verbose_name='Текст отзыва')),
            ],
            options={
                'verbose_name_plural': 'LearnPython Отзывы',
            },
        ),
        migrations.CreateModel(
            name='GraduateProjects',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(default=None, help_text='Название проекта', max_length=150)),
                ('project_image', models.ImageField(default=None, help_text='Пример интерфейса проекта', upload_to='')),
            ],
            options={
                'verbose_name_plural': 'LearnPython Проекты Учеников',
            },
        ),
        migrations.CreateModel(
            name='GraduateStories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('story_author', models.CharField(help_text='Как зовут автора истории?', max_length=50, null=True, verbose_name='Автор истории')),
                ('story_author_photo', models.ImageField(help_text='Прикрепите фото автора истории', null=True, upload_to='', verbose_name='Фотография автора')),
                ('story_author_position', models.CharField(help_text='Кто теперь выпускник', max_length=50, null=True, verbose_name='Должность выпускника')),
                ('story_author_background', models.CharField(help_text='Прим. "В прошлом: терапевт"', max_length=150, verbose_name='В прошлом автор был:')),
                ('story_text', models.TextField(default=None, help_text='Что хотел бы автор рассказать', verbose_name='История пользователя')),
            ],
            options={
                'verbose_name_plural': 'Learn Python Истории учеников',
            },
        ),
        migrations.CreateModel(
            name='LearnPythonCourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_index', models.IntegerField(help_text='Порядковый номер набора', verbose_name='Набор №')),
                ('course_start_date', models.DateField(help_text='Дата первого занятия', verbose_name='Дата начала курса')),
                ('course_end_date', models.DateField(help_text='Дата последнего занятия', verbose_name='Дата окончания курса')),
                ('end_registration_date', models.DateTimeField(default=None, help_text='Во сколько закрывается регистрация?', verbose_name='Дата закрытия регистрации')),
            ],
            options={
                'verbose_name_plural': 'LearnPython Наборы',
            },
        ),
        migrations.CreateModel(
            name='LearnPythonCoursePrices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_range', models.IntegerField(default=None, help_text='Мустанг / Гепард / Панда и вот это все', verbose_name='Название временного отрезка')),
                ('course_type', models.TextField(choices=[('Online', 'Online'), ('Offline', 'Offline')], help_text='Выберите тип курса', verbose_name='Тип курса')),
                ('price_range_end_date', models.DateField(help_text='Когда истекает данное предложение', verbose_name='Дата окончания интервала')),
                ('price_range_price', models.IntegerField(help_text='Сколько стоит курс в этот период', verbose_name='Цена')),
            ],
            options={
                'verbose_name_plural': 'LearnPython Цены на курсы',
            },
        ),
        migrations.CreateModel(
            name='MoscowPythonMeetup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meetup_number', models.IntegerField(help_text='Введите номер митапа', verbose_name='Номер митапа')),
                ('meetup_day', models.IntegerField(help_text='День месяца, в который будет митап', verbose_name='День Митапа')),
                ('meetup_month', models.TextField(choices=[('Января', 'Январь'), ('Февраля', 'Февраль'), ('Марта', 'Март'), ('Апреля', 'Апрель'), ('Мая', 'Май'), ('Июня', 'Июнь'), ('Июля', 'Июль'), ('Августа', 'Август'), ('Сентября', 'Сентябрь'), ('Октября', 'Октябрь'), ('Ноября', 'Ноябрь'), ('Декабря', 'Декабрь')], default='Январь', help_text='Месяц, в котором будет проходить митап', verbose_name='Месяц Митапа')),
                ('meetup_link', models.URLField(default='http://www.moscowpython.ru', help_text='Ссылка по стандарту, можно менять', verbose_name='Ссылка на митап')),
            ],
            options={
                'verbose_name_plural': 'MoscowPython Митапы',
            },
        ),
    ]
